--------------------------------------------------------
--  DDL for Package Body PKG_CHR_CHARGES_CALL
--------------------------------------------------------

  CREATE OR REPLACE PACKAGE BODY "MFB"."PKG_CHR_CHARGES_CALL" AS

  procedure PRO_RUN(PRB_FM IN OUT OTR_FM, PNI_CURRPOSITION IN NUMBER) AS
  BEGIN
  
  PRB_FM := PRO_FM;
    
  END PRO_RUN;
  
  FUNCTION PRO_FM RETURN OTR_FM AS
  FM OTR_FM := OTR_FM();
  BEGIN
  
    FM.HEADER := PRO_HEADER;
    FM.ATTRLIST := PRO_ATTR;
    FM.FTMS := PRO_FTM;
    FM.MAINFTM	:= 50;
    FM.MAINBTID := 'MAINBTID';
    FM.RESPONSE := 20;
    
    RETURN FM;
  
  END PRO_FM;
  
  
  FUNCTION PRO_HEADER RETURN OTR_FM_HEADER AS
  HEADER_ OTR_FM_HEADER := OTR_FM_HEADER();
  BEGIN
    
  HEADER_.USERID := 'A';
  HEADER_.LANGUAGEID := 'A';
  HEADER_.BRANCHID := 1;
  HEADER_.OFFICEID := 1;
  HEADER_.DEPTOID := 1;
  HEADER_.TERMINALID := 'A';
  HEADER_.MESSENGERID := 'A';
  HEADER_.SESSIONKEY := 'A';
  HEADER_.EXTERNALREFERENCE := 'A';
  HEADER_.REFERENCEUSER := 'A';
  HEADER_.PROCESSTYPE := 'A';
  
  RETURN HEADER_;
  
  END PRO_HEADER;
  
  FUNCTION PRO_ATTR RETURN OTT_SES_ATTR AS
  ATTR_ OTR_SES_ATTR := OTR_SES_ATTR();
  TATTR OTT_SES_ATTR := OTT_SES_ATTR();
  BEGIN
  
  FOR X IN 1..2 LOOP
    ATTR_.attrName:='X';
    ATTR_.attrValue:='Y';
    TATTR.Extend;
    TATTR(X):= ATTR_;
  END LOOP;
  
  RETURN TATTR;
  
  END PRO_ATTR;
  
  FUNCTION PRO_FTM RETURN OTT_FTM AS
  ATTR_ OTR_FTM:= OTR_FTM();
  TATTR OTT_FTM := OTT_FTM();
  BEGIN
  
  FOR X IN 1..2 LOOP
    ATTR_.TABS := PRO_TAB;
    ATTR_.FISA_OBJECT_ID := 'OBJECT';
    ATTR_.ID := 'ID';
    ATTR_.DATAKEY := 'DATAKEY';
    ATTR_.MESSAGELIST := PRO_MSG; 
    TATTR.Extend;
    TATTR(X):= ATTR_;
  END LOOP;
  
  RETURN TATTR;  
  END PRO_FTM;

  FUNCTION PRO_TAB RETURN OTT_TAB AS
  ATTR_ OTR_TAB:= OTR_TAB();
  TATTR OTT_TAB := OTT_TAB();
  BEGIN
  
  FOR X IN 1..2 LOOP
    ATTR_.RECS := PRO_REC;
    ATTR_.MULTIVALUE := 'G';
    ATTR_.PARENT := 5;
    ATTR_.ID := 'P';
    TATTR.Extend;
    TATTR(X):= ATTR_;
  END LOOP;
  
  RETURN TATTR;   
  
  END PRO_TAB;

  FUNCTION PRO_REC RETURN OTT_REC AS
  ATTR_ OTR_REC:= OTR_REC();
  TATTR OTT_REC := OTT_REC();
  BEGIN
  
  FOR X IN 1..2 LOOP
    ATTR_.FIELDS:= PRO_FIELD;
    ATTR_.RECSTATUS:='Y';
    TATTR.Extend;
    TATTR(X):= ATTR_;
  END LOOP;
  
  RETURN TATTR;  
  END PRO_REC;

  FUNCTION PRO_FIELD RETURN OTT_FIELD AS 
  ATTR_ OTR_FIELD := OTR_FIELD();
  TATTR OTT_FIELD := OTT_FIELD();
  BEGIN
  
  FOR X IN 1..2 LOOP
    ATTR_.NEWVAL:='X';
    ATTR_.OLDVAL:='Y';
    ATTR_.DATATYPE:='Z';
    ATTR_.ID:='T';
    TATTR.Extend;
    TATTR(X):= ATTR_;
  END LOOP;
  
  RETURN TATTR;  
  END PRO_FIELD;
  
  FUNCTION PRO_MSG RETURN OTT_USER_MSG AS
  ATTR_ OTR_USER_MSG:= OTR_USER_MSG();
  TATTR OTT_USER_MSG := OTT_USER_MSG();
  BEGIN
  
  FOR X IN 1..2 LOOP
    ATTR_.TEXT:='J';
    ATTR_.MSGTYPE:='K';
    TATTR.Extend;
    TATTR(X):= ATTR_;
  END LOOP;
  
  RETURN TATTR;
  
  END PRO_MSG;  


END PKG_CHR_CHARGES_CALL;

/
